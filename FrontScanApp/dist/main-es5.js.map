{"version":3,"sources":["$_lazy_route_resource lazy namespace object","node_modules/hammerjs/hammer.js","src/app/app.component.html","src/app/home/home.component.html","src/app/login/login.component.html","node_modules/tslib/tslib.es6.js","node_modules/zone.js/dist/zone-evergreen.js","src/app/app-routing.module.ts","src/app/app.component.ts","src/app/app.module.ts","src/app/auth/auth.guard.ts","src/app/auth/auth.interceptor.ts","src/app/home/home.component.ts","src/app/login/login.component.ts","src/app/material/material.module.ts","src/app/shared/user.service.ts","src/environments/environment.ts","src/main.ts","src/polyfills.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","export default \"<router-outlet></router-outlet>\"","export default \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand text-white\\\">JWT Auth System</a>\\n  <button class=\\\"btn btn-danger my-2 my-sm-0\\\" (click)=\\\"onLogout()\\\">Logout</button>\\n</nav>\\n\\n<div class=\\\"card m-5\\\" style=\\\"width:18rem\\\" *ngIf=\\\"userDetails\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\"><strong>Username : </strong>{{userDetails.userName}}</li>\\n    <li class=\\\"list-group-item\\\"><strong>FullName : </strong>{{userDetails.fullName}}</li>\\n    <li class=\\\"list-group-item\\\"><strong>Email : </strong>{{userDetails.email}}</li>\\n  </ul>\\n</div>\"","export default \"<form #form='ngForm' class=\\\"mb-4\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n  <mat-card>\\n      <mat-form-field apperance=\\\"legacy\\\">\\n        <mat-icon matPrefix>account_circle</mat-icon>\\n        <input matInput placeholder=\\\"Введите логин:\\\" #UserName=\\\"ngModel\\\" name=\\\"UserName\\\" [(ngModel)]=\\\"formModel.UserName\\\" required>       \\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-icon matPrefix>vpn_key</mat-icon>\\n        <input matInput placeholder=\\\"Введите пароль:\\\" type=\\\"password\\\" #Password=\\\"ngModel\\\" name=\\\"Password\\\" [(ngModel)]=\\\"formModel.Password\\\" required>\\n      </mat-form-field>\\n      <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" mat-raised-button color=\\\"primary\\\">Войти</button>\\n  </mat-card>\\n</form>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    const checkDuplicate = global[('__zone_symbol__forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        static __load_patch(name, fn) {\n            if (patches.hasOwnProperty(name)) {\n                if (checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            this._zone = null;\n            this.runCount = 0;\n            this._zoneDelegates = null;\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        setNativePromise: (NativePromise) => {\n            // sometimes NativePromise.resolve static function\n            // is not ready yet, (such as core-js/es6.promise)\n            // so we need to check here.\n            if (NativePromise && typeof NativePromise.resolve === 'function') {\n                nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n            }\n        },\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    function __symbol__(name) {\n        return '__zone_symbol__' + name;\n    }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (handler && typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    try {\n                        // try to print more readable error log\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        const error = err;\n                        error.rejection = value;\n                        error.promise = promise;\n                        error.zone = Zone.current;\n                        error.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(error);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    class ZoneAwarePromise {\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                value.then((value) => {\n                    resolvedValues[curValueIndex] = value;\n                    unresolvedCount--;\n                    if (unresolvedCount === 0) {\n                        resolve(resolvedValues);\n                    }\n                }, reject);\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        then(onFulfilled, onRejected) {\n            const chainPromise = new this.constructor(null);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            const chainPromise = new this.constructor(null);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n    let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n    if (!desc || desc.configurable) {\n        desc && delete desc.writable;\n        desc && delete desc.value;\n        if (!desc) {\n            desc = { configurable: true, enumerable: true };\n        }\n        desc.get = function () {\n            // if we already set ZoneAwarePromise, use patched one\n            // otherwise return native one.\n            return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n        };\n        desc.set = function (NewNativePromise) {\n            if (NewNativePromise === ZoneAwarePromise) {\n                // if the NewNativePromise is ZoneAwarePromise\n                // save to global\n                global[ZONE_AWARE_PROMISE] = NewNativePromise;\n            }\n            else {\n                // if the NewNativePromise is not ZoneAwarePromise\n                // for example: after load zone.js, some library just\n                // set es6-promise to global, if we set it to global\n                // directly, assertZonePatched will fail and angular\n                // will not loaded, so we just set the NewNativePromise\n                // to global[symbolPromise], so the result is just like\n                // we load ES6 Promise before zone.js\n                global[symbolPromise] = NewNativePromise;\n                if (!NewNativePromise.prototype[symbolThen]) {\n                    patchThen(NewNativePromise);\n                }\n                api.setNativePromise(NewNativePromise);\n            }\n        };\n        ObjectDefineProperty(global, 'Promise', desc);\n    }\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function () {\n            let resultPromise = fn.apply(this, arguments);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        const fetch = global['fetch'];\n        if (typeof fetch == 'function') {\n            global[api.symbol('fetch')] = fetch;\n            global['fetch'] = zoneify(fetch);\n        }\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** __zone_symbol__ string const */\nconst ZONE_SYMBOL_PREFIX = '__zone_symbol__';\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction copySymbolProperties(src, dest) {\n    if (typeof Object.getOwnPropertySymbols !== 'function') {\n        return;\n    }\n    const symbols = Object.getOwnPropertySymbols(src);\n    symbols.forEach((symbol) => {\n        const desc = Object.getOwnPropertyDescriptor(src, symbol);\n        Object.defineProperty(dest, symbol, {\n            get: function () {\n                return src[symbol];\n            },\n            set: function (value) {\n                if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                    // if src[symbol] is not writable or not have a setter, just return\n                    return;\n                }\n                src[symbol] = value;\n            },\n            enumerable: desc ? desc.enumerable : true,\n            configurable: desc ? desc.configurable : true\n        });\n    });\n}\nlet shouldCopySymbolProperties = false;\n\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && !(delegate = proto[delegateName])) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n            if (shouldCopySymbolProperties) {\n                copySymbolProperties(delegate, proto[name]);\n            }\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\n\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = /^__zone_symbol__(\\w+)(true|false)$/;\nconst IMMEDIATE_PROPAGATION_SYMBOL = ('__zone_symbol__propagationStopped');\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        function checkIsPassive(task) {\n            if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                // options is a non-null non-undefined object\n                // passive is not supported\n                // don't pass options as object\n                // just pass capture as a boolean\n                task.options = !!taskData.options.capture;\n                taskData.options = task.options;\n            }\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            checkIsPassive(task);\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            checkIsPassive(task);\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const blackListedEvents = Zone[Zone.__symbol__('BLACK_LISTED_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                const eventName = arguments[0];\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const options = arguments[2];\n                if (blackListedEvents) {\n                    // check black list\n                    for (let i = 0; i < blackListedEvents.length; i++) {\n                        if (eventName === blackListedEvents[i]) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                    }\n                }\n                let capture;\n                let once = false;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                    once = options ? !!options.once : false;\n                }\n                const zone = Zone.current;\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (!symbolEventNames) {\n                    // the code is duplicate, but I just want to get some better performance\n                    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                    zoneSymbolEventNames$1[eventName] = {};\n                    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                    symbolEventName = capture ? symbolCapture : symbol;\n                }\n                else {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            const eventName = arguments[0];\n            const options = arguments[2];\n            let capture;\n            if (options === undefined) {\n                capture = false;\n            }\n            else if (options === true) {\n                capture = true;\n            }\n            else if (options === false) {\n                capture = false;\n            }\n            else {\n                capture = options ? !!options.capture : false;\n            }\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            const eventName = arguments[0];\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            const eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    const foundTasks = [];\n    for (let prop in target) {\n        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n        let evtName = match && match[1];\n        if (evtName && (!eventName || evtName === eventName)) {\n            const tasks = target[prop];\n            if (tasks) {\n                for (let i = 0; i < tasks.length; i++) {\n                    foundTasks.push(tasks[i]);\n                }\n            }\n        }\n    }\n    return foundTasks;\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/*\n * This is necessary for Chrome and Chrome mobile, to enable\n * things like redefining `createdCallback` on an element.\n */\nconst zoneSymbol$1 = Zone.__symbol__;\nconst _defineProperty = Object[zoneSymbol$1('defineProperty')] = Object.defineProperty;\nconst _getOwnPropertyDescriptor = Object[zoneSymbol$1('getOwnPropertyDescriptor')] =\n    Object.getOwnPropertyDescriptor;\nconst _create = Object.create;\nconst unconfigurablesKey = zoneSymbol$1('unconfigurables');\nfunction propertyPatch() {\n    Object.defineProperty = function (obj, prop, desc) {\n        if (isUnconfigurable(obj, prop)) {\n            throw new TypeError('Cannot assign to read only property \\'' + prop + '\\' of ' + obj);\n        }\n        const originalConfigurableFlag = desc.configurable;\n        if (prop !== 'prototype') {\n            desc = rewriteDescriptor(obj, prop, desc);\n        }\n        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n    };\n    Object.defineProperties = function (obj, props) {\n        Object.keys(props).forEach(function (prop) {\n            Object.defineProperty(obj, prop, props[prop]);\n        });\n        return obj;\n    };\n    Object.create = function (obj, proto) {\n        if (typeof proto === 'object' && !Object.isFrozen(proto)) {\n            Object.keys(proto).forEach(function (prop) {\n                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);\n            });\n        }\n        return _create(obj, proto);\n    };\n    Object.getOwnPropertyDescriptor = function (obj, prop) {\n        const desc = _getOwnPropertyDescriptor(obj, prop);\n        if (desc && isUnconfigurable(obj, prop)) {\n            desc.configurable = false;\n        }\n        return desc;\n    };\n}\nfunction _redefineProperty(obj, prop, desc) {\n    const originalConfigurableFlag = desc.configurable;\n    desc = rewriteDescriptor(obj, prop, desc);\n    return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n}\nfunction isUnconfigurable(obj, prop) {\n    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];\n}\nfunction rewriteDescriptor(obj, prop, desc) {\n    // issue-927, if the desc is frozen, don't try to change the desc\n    if (!Object.isFrozen(desc)) {\n        desc.configurable = true;\n    }\n    if (!desc.configurable) {\n        // issue-927, if the obj is frozen, don't try to set the desc to obj\n        if (!obj[unconfigurablesKey] && !Object.isFrozen(obj)) {\n            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });\n        }\n        if (obj[unconfigurablesKey]) {\n            obj[unconfigurablesKey][prop] = true;\n        }\n    }\n    return desc;\n}\nfunction _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {\n    try {\n        return _defineProperty(obj, prop, desc);\n    }\n    catch (error) {\n        if (desc.configurable) {\n            // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's\n            // retry with the original flag value\n            if (typeof originalConfigurableFlag == 'undefined') {\n                delete desc.configurable;\n            }\n            else {\n                desc.configurable = originalConfigurableFlag;\n            }\n            try {\n                return _defineProperty(obj, prop, desc);\n            }\n            catch (error) {\n                let descJson = null;\n                try {\n                    descJson = JSON.stringify(desc);\n                }\n                catch (error) {\n                    descJson = desc.toString();\n                }\n                console.log(`Attempting to configure '${prop}' with descriptor '${descJson}' on object '${obj}' and got error, giving up: ${error}`);\n            }\n        }\n        else {\n            throw error;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplyconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = _redefineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        function timer() {\n            try {\n                task.invoke.apply(this, arguments);\n            }\n            finally {\n                // issue-934, task will be cancelled\n                // even it is a periodic task such as\n                // setInterval\n                if (!(task.data && task.data.isPeriodic)) {\n                    if (typeof data.handleId === 'number') {\n                        // in non-nodejs env, we remove timerId\n                        // from local cache\n                        delete tasksByHandleId[data.handleId];\n                    }\n                    else if (data.handleId) {\n                        // Node returns complex objects as handleIds\n                        // we remove task reference from timer object\n                        data.handleId[taskSymbol] = null;\n                    }\n                }\n            }\n        }\n        data.args[0] = timer;\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative(task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n    patchClass('IntersectionObserver');\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n    propertyPatch();\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        const loadTasks = target['__zone_symbol__loadfalse'];\n                        if (loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target['__zone_symbol__loadfalse'];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n","import { AuthGuard } from './auth/auth.guard';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'Angular7';\r\n}\r\n","import { MaterialModule } from './material/material.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppComponent } from './app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { UserService } from './shared/user.service';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ToastrModule.forRoot({\n      progressBar: true\n    }),\n    FormsModule\n  ],\n  providers: [UserService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n  constructor(private router: Router) {\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('token') != null) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private router: Router) {\n\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (localStorage.getItem('token') != null) {\n            const clonedReq = req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\n            });\n            return next.handle(clonedReq).pipe(\n                tap(\n                    () => { },\n                    err => {\n                        if (err.status === 401) {\n                            localStorage.removeItem('token');\n                            this.router.navigateByUrl('/login');\n                        }\n                    }\n                )\n            );\n        } else {\n            return next.handle(req.clone());\n        }\n    }\n}\n","import { UserService } from './../shared/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n  userDetails: any;\n\n  constructor(private router: Router, private service: UserService) { }\n\n  ngOnInit() {\n    this.service.getUserProfile().subscribe(\n      (      res: any) => {\n        this.userDetails = res;\n      },\n      (      err: any) => {\n        console.log(err);\n      },\n    );\n  }\n\n\n  onLogout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n}\n","import { ToastrService } from 'ngx-toastr';\nimport { UserService } from '../shared/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styles: []\n})\n\nexport class LoginComponent implements OnInit {\n  title = 'Авторизация';\n  formModel = {\n    UserName: '',\n    Password: ''\n  };\n  constructor(private service: UserService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null) {\n      this.router.navigateByUrl('/home');\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.login(form.value).subscribe(\n      (res: any) => {\n        localStorage.setItem('token', res.token);\n        this.router.navigateByUrl('/home');\n      },\n      err => {\n        if (err.status === 400) {\n          this.toastr.error('Incorrect username or password.', 'Authentication failed.');\n        } else {\n          console.log(err);\n        }\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport * as Material from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        Material.MatToolbarModule,\r\n        Material.MatGridListModule,\r\n        Material.MatFormFieldModule,\r\n        Material.MatInputModule,\r\n        Material.MatButtonModule,\r\n        Material.MatCardModule,\r\n        Material.MatIconModule\r\n    ],\r\n    exports: [\r\n        Material.MatToolbarModule,\r\n        Material.MatGridListModule,\r\n        Material.MatFormFieldModule,\r\n        Material.MatInputModule,\r\n        Material.MatButtonModule,\r\n        Material.MatCardModule,\r\n        Material.MatIconModule\r\n    ],\r\n    declarations: []\r\n})\r\n\r\nexport class MaterialModule { }\r\n","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, AbstractControl } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n  readonly BaseURI = 'http://localhost:54277/api';\n\n  formModel = this.fb.group({\n    UserName: ['', Validators.required],\n    Email: ['', Validators.email],\n    FullName: [''],\n    Passwords: this.fb.group({\n      Password: ['', [Validators.required, Validators.minLength(6)]],\n      ConfirmPassword: ['', Validators.required]\n    }, { validator: this.comparePasswords })\n\n  });\n\n  comparePasswords(fb: FormGroup) {\n    const confirmPswrdCtrl = fb.get('ConfirmPassword');\n    // passwordMismatch\n    // confirmPswrdCtrl.errors={passwordMismatch:true}\n    if (confirmPswrdCtrl != null) {\n      if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\n        const pswd = fb.get('Password');\n        if (pswd != null && pswd.value !== confirmPswrdCtrl.value) {\n            confirmPswrdCtrl.setErrors({ passwordMismatch: true });\n          } else {\n          confirmPswrdCtrl.setErrors(null);\n        }\n      }\n    }\n  }\n\n  register() {\n    const body = {\n      UserName: this.formModel.value.UserName,\n      Email: this.formModel.value.Email,\n      FullName: this.formModel.value.FullName,\n      Password: this.formModel.value.Passwords.Password\n    };\n    return this.http.post(this.BaseURI + '/ApplicationUser/Register', body);\n  }\n\n  login(formData: any) {\n    return this.http.post(this.BaseURI + '/ApplicationUser/Login', formData);\n  }\n\n  getUserProfile() {\n    return this.http.get(this.BaseURI + '/UserProfile');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import './polyfills';\n\nimport {NgModule} from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  NgModule();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch((err: any) => console.error(err));\n","import 'zone.js/dist/zone';\nimport 'hammerjs';\n\n/**  Copyright 2019 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */\n"],"sourceRoot":"webpack:///"}